name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run test suite
        env:
          PYTHONPATH: ${{ github.workspace }}/app
        run: python tests/test_suite.py

  deploy:
    runs-on: ubuntu-latest
    needs: test # Test must pass.
    if: github.event_name == 'push' # Only deploy on push to main

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}

      - name: Pull latest changes and install requirements on server
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.SSH_HOST }} << 'EOF'
            #  Pull repository changes
            cd IDE-autograder
            git pull origin main

            # Set up the virtual environment and install requirements
            source autograder_env/bin/activate
            pip install -r requirements.txt
          EOF

      - name: Rebuilding docker images
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.SSH_HOST }} << 'EOF'
            cd IDE-autograder
            bash ./autograder.classla.org/build_docker_images.sh
          EOF

      - name: Restart FastAPI application
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.SSH_HOST }} << 'EOF'
            sudo systemctl restart fastapi
            sudo systemctl reload nginx
          EOF
